import streamlit as st
import random

def generatePassword(pwlength):
    alphabet = "abcdefghijklmnopqrstuvwxyz"
    passwords = [] 

    for i in pwlength:
        password = "" 
        for j in range(i):
            next_letter_index = random.randrange(len(alphabet))
            password = password + alphabet[next_letter_index]
        
        password = replaceWithNumber(password)
        password = replaceWithUppercaseLetter(password)
        
        passwords.append(password) 
    
    return passwords

def replaceWithNumber(pword):
    for i in range(random.randrange(1,3)):
        replace_index = random.randrange(len(pword)//2)
        pword = pword[0:replace_index] + str(random.randrange(10)) + pword[replace_index+1:]
    return pword

def replaceWithUppercaseLetter(pword):
    for i in range(random.randrange(1,3)):
        replace_index = random.randrange(len(pword)//2,len(pword))
        pword = pword[0:replace_index] + pword[replace_index].upper() + pword[replace_index+1:]
    return pword

def get_valid_input(prompt, min_value=3):
    while True:
        try:
            user_input = int(st.text_input(prompt))
            if user_input >= min_value:
                return user_input
            else:
                st.error(f"Password length should be at least {min_value}. Please try again.")
        except ValueError:
            st.error("Invalid input! Please enter a numeric value.")

def main():
    st.title("Password Generator")
    st.write("This program will help you generate secure passwords based on your preferences.")
    
    numPasswords = get_valid_input("How many passwords do you want to generate? (Enter a number): ", min_value=1)
    
    st.write(f"\nGenerating {numPasswords} passwords...")

    passwordLengths = []

    for i in range(numPasswords):
        length = get_valid_input(f"Enter the length for Password #{i + 1} (minimum 3 characters): ", min_value=3)
        passwordLengths.append(length)
    
    include_special_chars = st.checkbox("Include special characters (e.g., !, @, #)?")
    include_numbers = st.checkbox("Include numbers (0-9)?")

    if st.button("Generate Passwords"):
        Password = generatePassword(passwordLengths)

        st.write("\nGenerated Passwords:")
        
        for i in range(numPasswords):
            password = Password[i]
            
            if include_numbers:
                password = replaceWithNumber(password)
            if include_special_chars:
                special_chars = "!@#$%^&*()"
                special_char = random.choice(special_chars)
                password = password + special_char

            st.write(f"Password #{i + 1}: {password}")
            
        st.write("\nThank you for using the Password Generator!")

if __name__ == "__main__":
    main()
